image: docker:stable

services:
  - docker:dind

stages:
  - prepare image
  - build image
  - release image
  - build
  - run
  - tests

variables:
  DOCKER_HOST: tcp://docker:2375
  DOCKER_DRIVER: overlay2
  LOCAL_IMAGE: registry.gitlab.com/mog33/docker-compose-drupal
  RELEASE_REGISTRY: docker.io
  RELEASE_IMAGE: index.docker.io/$RELEASE_USER
  DOCKER_COMPOSE_VERSION: 1.23.2

################################################################################
# Templates to avoid repeat.
# https://docs.gitlab.com/ee/ci/yaml/#anchors
################################################################################

.docker_login_gitlab:
  - &docker_login_gitlab docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com

.docker_build_push:
  script: &docker_build_push
    - docker build --pull --tag $LOCAL_IMAGE/$IMAGE $DIR
    - docker push $LOCAL_IMAGE/$IMAGE

.docker_pull:
  - &docker_pull docker pull $LOCAL_IMAGE/$IMAGE

.build_image:
  stage: build image
  before_script:
    - *docker_login_gitlab
  script: *docker_build_push

.release:
  stage: release image
  before_script:
    - docker login -u $RELEASE_USER -p $RELEASE_PASSWORD $RELEASE_REGISTRY
  script:
    - *docker_pull
    - docker tag $LOCAL_IMAGE/$IMAGE $RELEASE_IMAGE/$IMAGE
    - docker push $RELEASE_IMAGE/$IMAGE

# https://github.com/docker/compose/issues/6617
.install_docker_compose:
    - &install_docker_compose
      apk add --quiet --no-cache bash make py-pip && pip install --quiet docker-compose==$DOCKER_COMPOSE_VERSION

.test_run:
  stage: run
  script:
    - docker-compose build &> /dev/null
    - chmod -R 600 config/mysql
    - docker-compose up -d
    - docker-compose ps
    - sleep 5s && docker-compose logs
    - docker exec dcd-php php -v

.test:
  stage: tests
  script:
    - chmod -R 600 config/mysql
    - docker-compose up -d --build &> /dev/null
    - apk --no-cache add git curl
    - scripts/get-tools.sh test
    - scripts/composer -V
    - scripts/install-drupal.sh install -p drupal-min --force --quiet
    - scripts/mysql test
    - scripts/pgsql test
    - scripts/install-drupal.sh test

################################################################################
# Jobs based on previous templates.
################################################################################

build:dashboard:
  image: node:latest
  stage: prepare image
  script:
    - npm install --prefix build/dashboard build/dashboard --save
    - npm run build --prefix build/dashboard
  only:
    - dashboard-dev
    - dashboard-release
    - master
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - build/dashboard/node_modules
  artifacts:
    paths:
      - build/dashboard/app
    expire_in: 1 day

dashboard:
  extends: .build_image
  variables:
    IMAGE: dashboard:latest
    DIR: build/dashboard
  dependencies:
    - build:dashboard
  only:
    - dashboard-dev
    - dashboard-release
    - master

release:dashboard:
  extends: .release
  variables:
    IMAGE: dashboard:latest
  dependencies:
    - dashboard
  only:
    - dashboard-release
    - master

build:
  stage: build
  before_script:
    - *install_docker_compose
  script:
    - make setup
    - docker-compose config
  except:
    - dashboard
run:
  before_script:
    - *install_docker_compose
    - make setup
  extends: .test_run
  except:
    - /^dashboard-.*$/

run basic:
  before_script:
    - *install_docker_compose
    - make setup
    - cp samples/apache_mysql_php.yml docker-compose.yml
  extends: .test_run
  except:
    - /^dashboard-.*$/

run advanced:
  before_script:
    - *install_docker_compose
    - make setup
    - cp samples/apache_mysql_php_memcache_solr.yml docker-compose.yml
  extends: .test_run
  except:
    - /^dashboard-.*$/

run AP9P:
  before_script:
    - *install_docker_compose
    - make setup
    - cp samples/apache_postgres9_php.yml docker-compose.yml
  extends: .test_run
  except:
    - /^dashboard-.*$/

test:
  before_script:
    - *install_docker_compose
    - make setup
  extends: .test
  except:
    - /^dashboard-.*$/
