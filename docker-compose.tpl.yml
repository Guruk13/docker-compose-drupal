################################################################################
# Docker compose Drupal full dev stack.
#
# A single Docker compose file that try to simply and quickly setup a full
# Drupal development environment.
#
# Project page:
#   https://github.com/Mogtofu33/docker-compose-drupal
#
# Quick set-up:
#  Copy this file, rename to docker-compose.yml, comment or remove services
#  definition based on your needs.
#  Copy and rename default.env to .env
#  Launch:
#    docker-compose up
#
# You can check your config after editing this file with:
#   docker-compose config
#
# Services settings are in config folder, check and adapt to your needs.
#
# For more information on docker compose file structure:
# @see https://docs.docker.com/compose/
#
################################################################################
version: '3'
services:
  apache:
    image: mogtofu33/apache-php:1.${PHP_VERSION:-7}
    ports:
      - "${APACHE_HOST_HTTP_PORT:-80}:80"
      - "${APACHE_HOST_HTTPS_PORT:-443}:443"
    links:
      ## Choose database.
      - mysql
      # - pgsql
      ## Choose optionnal services.
      # - memcache
      # - solr
      - mailhog
    volumes:
      - ${HOST_WEB_ROOT:-./data/www}:/www
      - ${HOST_LOGS_ROOT:-./data/logs}:/var/log/apache2
      - ./config/php${PHP_VERSION:-7}/conf.d:/etc/php/conf.d
      - ./config/apache:/etc/apache2
      # Optional Drush alias file (or any other config)
      - ./config/drush:/etc/drush
    env_file: .env
    environment:
      - CONTAINER_NAME=apache
  mysql:
    image: mogtofu33/mariadb:latest
    expose:
      - "3306"
    volumes:
      - ${HOST_LOGS_ROOT:-./data/logs}:/var/log/mysql
      ## Comment these two lines on Windows system, permissions issue.
      - ${HOST_DATABASE_MYSQL:-./data/database/mysql}:/var/lib/mysql
      - ./config/mysql:/etc/mysql
    env_file: .env
    environment:
      - CONTAINER_NAME=mysql
  pgsql:
    image: mogtofu33/postgres:latest
    expose:
      - "5432"
    ## Comment these two lines on Windows system, permissions issue.
    volumes:
      - ${HOST_DATABASE_POSTGRES:-./data/database/pgsql}:/var/lib/postgresql/data
    env_file: .env
    environment:
      - CONTAINER_NAME=pgsql
  mailhog:
    image: diyan/mailhog:latest
    expose:
      - "1025"
    ports:
      - "${MAILHOG_HOST_PORT:-8025}:8025"
    env_file: .env
    environment:
      - CONTAINER_NAME=mailhog
  memcache:
    image: bpressure/alpine-memcached:latest
    expose:
      - "11211"
    environment:
      - CONTAINER_NAME=memcache
  solr:
    image: mogtofu33/solr:latest
    ports:
      - "${SOLR_HOST_PORT:-8983}:8983"
    volumes:
      - ${HOST_LOGS_ROOT:-./data/logs}:/var/log/solr
    env_file: .env
    environment:
      - CONTAINER_NAME=solr
  # varnish:
  #   build: ./build/varnish
  #   ports:
  #     - "${VARNISH_HOST_PORT:-8080}:80"
  #     - "${VARNISH_HOST_TERMINAL_PORT:-6082}:6082"
  #   links:
  #     - apache
  #   volumes:
  #     - ${HOST_LOGS_ROOT:-./data/logs}:/var/log/varnish
  #   env_file: .env
  #   environment:
  #     - CONTAINER_NAME=varnish
  # ldap:
  #   image: osixia/openldap:latest
  #   ports:
  #     - "${LDAP_HOST_PORT:-389}:389"
  #   restart: always
  #   env_file: .env
  #   environment:
  #     - CONTAINER_NAME=ldap
  # ldapadmin:
  #   image: osixia/phpldapadmin:latest
  #   links:
  #     - ldap
  #   ports:
  #     - "${PHPLDAPADMIN_HOST_PORT:-8443}:8443"
  #   env_file: .env
  #   environment:
  #     - CONTAINER_NAME=ldapadmin
  ## Optionnal Docker ui, uncomment to enable.
  # docker-ui:
  #   image: uifd/ui-for-docker:latest
  #   ports:
  #     - "9001:9000"
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #   privileged: true
